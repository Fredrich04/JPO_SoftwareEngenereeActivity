/*
** EPITECH PROJECT, 2025
** manage_plane
** File description:
** manage_plane
*/

#include "../include/my_radar.h"

int check_plane_collision(plane_t *p1, plane_t *p2) {
    float distance = sqrt(pow(p1->axc - p2->axc, 2) + pow(p1->ayc - p2->ayc, 2));

    if (distance < COLLISION)
        return 0;
    return 1;
}

void destroy_plane_list(plane_t **p)
{
    plane_t *plane = *p;
    plane_t *next;

    while (plane != NULL) {
        next = plane->next;
        sfSprite_destroy(plane->plane);
        sfTexture_destroy(plane->plane_text);
        sfRectangleShape_destroy(plane->rectangle);
        free(plane);
        plane = next;
    }
}

void disp_plane(radar_t box, plane_t **p)
{
    plane_t *plane = *p;

    while (plane != NULL) {
    [O    box = mouvment_manager(box, plane);
        //printf("%d", check_plane_collision(plane, plane->next));
        sfRenderWindow_drawSprite(box.window, plane->plane, NULL);
        sfRenderWindow_drawRectangleShape(box.window, plane->rectangle, NULL);
        plane = plane->next;
    }
}

radar_t mouvment_manager(radar_t box, plane_t *plane)
{
    double x = plane->axf - plane->axi;
    double y = plane->ayf - plane->ayi;
    double dis = 900000 / plane->va;
    sfVector2f pos;
    sfVector2f pos2 = {80000, 80000};
    sfVector2f move;

    if (plane->d > box.time)
        return box;
    move = (sfVector2f){x / dis, y / dis};
    pos = sfSprite_getPosition(plane->plane);
    plane->axc = pos.x;
    plane->ayc = pos.y;
    sfSprite_move(plane->plane, move);
    if (fabs(pos.x - plane->axf) < 10.0
        && fabs(pos.y - plane->ayf) < 10.0) {
        sfSprite_setPosition(plane->plane, pos2);
    }
    sfRectangleShape_setPosition(plane->rectangle, pos);
    return box;
}
